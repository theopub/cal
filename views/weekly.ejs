<html>
  <head>
    <title>Red Calendar</title>
    <meta name="description" content="Red Calendar is an arts and action calendar that helps NYC gather without big tech middlemen.">
    
    <link rel="icon" type="image/png" href="/cal.png" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <style>
      body {
        font-family: Helvetica, sans-serif; 
        background-color: rgb(101, 0, 0);
        font-size: 15px;
      }

      .posters {
        position: relative;
        /* filter: grayscale(100%) brightness(60%) sepia(100%) hue-rotate(-50deg)
          saturate(360%); */
          filter:  brightness(60%) sepia(100%) hue-rotate(-39deg) saturate(420%);  
        opacity: 0.6;
        cursor: pointer;
        padding: 0.3vw;
      }

      .posters:hover {
        border: 0.3vw solid red;
        filter: none;
        opacity: 1;
      }

      .container {
        display: flex;
      }

      .column {
        padding-right: 1vw;
        padding-left: 1vw;
        width: 18vw;
        padding-top: 6vh; 
        height: 93vh; 
        /* below: w ads on bottom */
        /* height: 83vh;  */
        overflow-y: auto;
        display: flex;
        flex-shrink: 0;
        flex-direction: column;
        /* border-right: .6vw dotted red;  */
        border-right: 0.1vw solid rgb(253, 0, 0);
      }

      .date,
      #menu,
      .more-info,
      .close,
      #about {
        /* below is too pink */
        /* background-color: rgb(252, 83, 83); */
        /* background-color: rgb(255, 90, 72); */
          
        background-color: rgb(253, 85, 66);
        color: rgb(71, 0, 0);
        box-shadow: 0px 3px 12px 3px rgb(120, 0, 0);
        z-index: 10;
      }

      .date, #menu, .close, #bw {
        user-select: none;
        -webkit-user-select: none; 
        -ms-user-select: none; 
      }

      .date {
        position: absolute;
        /* top: 45px; */
        top: 3vh; 
        width: 18vw;
        text-align: center;
      }

      #menu {
        position: fixed;
        bottom: 0;
        padding: 2vw;
        width: 210px;
        right: 0;
      }

      input[type="checkbox"] {
        accent-color: rgb(163, 1, 1);
        /* margin-right: 10px; */
      }

      input[type="checkbox"]:checked {
        border: 2px solid darkred;
        /* margin-right: 10px; */
      }

      #scrollRight {
        font-size: 9vh;
        z-index: 10;
        position: fixed;
        right: 1.5vw;
        top: 45vh;
      }

      #scrollRight:hover {
        color: red;
        text-shadow: -3px -3px 6px black;
      }

      a {
        color: rgb(71, 0, 0);
      }

      #ads {
        width: 100vw;
        height: 15vh;
        background-color: black;
        left: 0;
        bottom: 0;
        position: fixed;
        z-index: 100;
      }

      .more-info,
      #about {
        display: none;
        /* border: 3vw dotted rgb(142, 0, 0); */
        padding: 1vw;
        width: 50vw;
        position: fixed;
        left: 24vw;
        top: 12vh;
        /* below: meant to enable scrolling, btu not working */
        overflow-y: auto;
        max-height: 75vh;
     
      }


      .more-info {
                box-shadow: 0px 3px 300px 60px rgb(120, 0, 0); 
            }

      .title {
        font-weight: bold; 
      }

      .poster-inline {
        width: 30vw;
        float: left;
        margin-right: 1vw;
        box-shadow: 0px 3px 3px 3px rgb(202, 0, 0);
        /* margin-bottom: 1vw;  */
      }

      .close {
        border-radius: 50%;
        position: absolute;
        top: 0vw;
        right: 0vw;
        cursor: pointer;
        font-size: 24px; 
      }

      .close:hover {
        color: rgb(166, 1, 1);
        box-shadow: 0px 3px 12px 3px rgb(166, 1, 1); 
      }

      #about-click {
        cursor: pointer;
      }

      .mobileonly {
        display:none;
      }

      .linebreaks {
        white-space: pre-wrap;
      }

      #categories {
        display: inline; 
      }

      #about-title {
        text-align: center; 
        width: 100%; 
      }


      @media only screen and (max-width: 750px) {
                .more-info, #about {
                    left: 3vw; 
                    width: 92.3vw; 
                }

                body {
                    font-size: 12.9px; 
                    overflow-y: hidden;
                    /* despite above, still issue where it scrolls all the way down on android */
                }

                .notmobile, #categories {
                    display: none; 
                }

                #menu {
                    width: 96vw; 
                    right: none; 
                    left: 0; 
                 
                }

                #mobileclickers {
                  text-align: center; 
                }

                .poster-inline {
                    width: 60vw; 
                    /* width: 100%;  */
                }


                .column, .date {
                  width: 30vw;
                }

                .mobileonly {
                  display: inline; 
                }

                .close {
                  font-size: 30px; 
                }

                .column {
                  height: 81vh; 
                }

            }

    </style>
  </head>
  <body>

    <!-- <div id="bw" onclick="toggleBW()">
      B/W
    </div>

    <script>
      function toggleBackgroundColor() {
        const div = document.getElementById("myDiv");
        div.style.backgroundColor = (div.style.backgroundColor === "red") ? "black" : "red";
      }
    </script> -->







    <div id="menu">
      <span class="notmobile">Welcome to Red Calendar. <br /><br /></span>

      <span id="categories">
      <% tags.forEach((t)=>{ %>
        <% if(t.checked) { %>
          <input type="checkbox" checked id="<%=t.id%>" class="tag_checkboxes" name="categories" value="<%=t.tag_name%>" onchange="filterEventsByTag()">
        <% } else { %>
        <input type="checkbox"  id="<%=t.id%>" class="tag_checkboxes" name="categories" value="<%=t.tag_name%>" onchange="filterEventsByTag()">
        <% } %> 
        <label for="<%=t.id%>"><%=t.tag_name%></label>
        <br /> 
      <% }) %>     <br /> </span>


    <div id="mobileclickers">

      <span class="notmobile">
      <a href="/add">Add your event (free).</a>
      <br /><br /></span>


      <span id="about-click" onclick="toggleGuys('about')"><u>
        About.</u></span>


      <span class="mobileonly">~~~
        <a href="/add">Add your event (free).</a>

      </span>

      <span class="mobileonly" onclick="toggleGuys('categories')">~~~ <u>Filter.</u></span>
    </div>



    

    </div>

    <div id="about">
      <div class="close" onclick="this.parentElement.style.display='none'">X</div>
      <b><span id="about-title">About Red Calendar</span></b><br /><br />
      Red Calendar is an arts and action calendar that helps NYC gather without big tech middlemen. Managed by a team of editors, the Calendar also encourages cross-pollination among NYC’s leftist/arts/culture communities. Anyone can add events for free, pending editor approval! <br /><br />

      Red Calendar is big-tech-free&mdash;no Meta, no AWS, no GCal. Each day's events reorder when you refresh. We are called Red Calendar because we wanted a color, and this was the shortest (and cheapest) url we could find that incorporated “calendar” and a color.
      <br /><br />
Editors: <br />
<a href="https://nyc-noise.com/">JH</a> <br />
<a href="https://romkehoogwaerts.com/">Romke Hoogwaerts</a> <br />
<a href="https://www.auricpress.com/aristilde-kirby-daisy-catherine">Aristilde Kirby</a> <br />
Kira M
<br /><br />

Direction and frontend: <a href="https://theo.land/">Theo Ellin Ballew</a><br />
Backend development: Haider<br />
Middleware: <a href="https://samheckle.com/">Sam Heckle</a>

    </div>

    <div class="container">
      <% Object.entries(events).forEach(([day, event])=>{ %>
          <div class="column">
            <div id="<%= day.substring(5) %>" class="date"><%= day %> <%= event.start_date %></div>
            <%
            const shuffled = [...event].sort(() => 0.5 - Math.random());
            shuffled.forEach((d) => {
          %>
            <img
              class="posters"
              src="<%= d.image_url %>"
              onclick="toggleElement(this, '<%= d.id %>')"
            />
          <% }) %>

            <!-- <% event.forEach((d)=>{ %> 
                    <img
                    class="posters"
                    src="<%=d.image_url%>"
                    onclick="toggleElement(this, '<%=d.id%>')"
                    />
                <% }) %>  -->
          </div>
      <% }) %> 
    
      <div class="more-info" id="event-details-container">

      </div>
    </div>

    <script>
      function toggleGuys(id) {
              const element = document.getElementById(id);

              if (!element) return; // Safety check

              // If the clicked element is already visible, hide it
              if (element.style.display === "block") {
                  element.style.display = "none";
                  history.pushState(null, "", "?"); // Reset URL
              } else {
                  // Hide all other elements
                  document.querySelectorAll('.more-info').forEach(el => el.style.display = "none");

                  // Show the selected element
                  element.style.display = "block";
                  history.pushState(null, "", "?event=" + id);
              }
          }
  
      // Check URL on page load and show the correct element

  </script>

    <script>

      
      let prevClick
      async function toggleElement(e, id){
        
        const eventContainer = document.getElementById('event-details-container')

        if(eventContainer.style.display == "block" && prevClick == e){
          closeElement(id)
        } else{
          showElement(id)
        }
        prevClick = e
      }
      async function showElement(id) {
        const p = new URLSearchParams({event_id: id})
        const eventContainer = document.getElementById('event-details-container')
        let eventId = id
  
        let fetchSingleEvent = await fetch('/single-event?' + p).then(response => response.text())
        eventContainer.innerHTML = fetchSingleEvent

        const element = document.getElementById(eventId);
        if (!element) return; // Safety check
        // Show the selected element
        element.style.display = "block";
        eventContainer.style.display = "block"
        history.pushState(null, "", "?event=" + eventId);
      }

      function closeElement(id){
        // console.log('closed')
        let childElement = document.getElementById(id)
        let parentElement = document.getElementById('event-details-container')

        childElement.style.display = 'none'
        parentElement.style.display = 'none'

        parentElement.removeChild(parentElement.lastElementChild)

        history.pushState(null, "", "/");
    }

    // filters the page by the tags
    async function filterEventsByTag(){
      // pulls currently checked tags into array
      const checkedTags = Array.from(document.getElementsByClassName("tag_checkboxes")).filter(checkedTag => checkedTag.checked)

      // format spaces and / to comma separated url friendly string
      let filteredTagNames = checkedTags.map((c) => c.value.replace(/( \/ )/g, "-"))
      filteredTagNames = filteredTagNames.map(t => t.replace(/ /g, '_') )
      const formatFilteredTagIds = filteredTagNames.join(',')

      // make a request for filtering
      const filteredCalendar = await fetch('/filtered-weekly?filter='+formatFilteredTagIds, {
        method: "GET"
      }).then(response => response.text())
      
      // update html based on tags
      document.body.innerHTML = filteredCalendar
    }

      // Check URL on page load and show the correct element

      window.onload = function () {
        // check url 
        const params = new URLSearchParams(window.location.search);
        const visibleElement = params.get("event");

        if (visibleElement === "about") {
          document.getElementById("about").style.display = "block";
          return;
        }

        if (visibleElement) {
          showElement(visibleElement);
        }

        // check date
        let date = new Date().getDate()
        // console.log(date)
      };
    </script>

<script data-goatcounter="https://calred.goatcounter.com/count"
async src="//gc.zgo.at/count.js"></script>

  </body>
</html>
