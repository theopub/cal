<html>
  <head>
    <title>Red Calendar</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <style>
      body {
        /* overflow-y: hidden; */
        /* background-color: black;  */
        font-family: Helvetica;
        background-color: rgb(101, 0, 0);
        font-size: 15px;
      }

      .posters {
        position: relative;
        /* below: good on my comp */
        /* filter: grayscale(100%) brightness(60%) sepia(100%) hue-rotate(-50deg) saturate(270%);      */
        /* below: better without bluelight canceling? */
        filter: grayscale(100%) brightness(60%) sepia(100%) hue-rotate(-50deg)
          saturate(360%);
        opacity: 0.6;
        cursor: pointer;

        /* filter: grayscale(100%) brightness(6%) sepia(100%) hue-rotate(-50deg) saturate(400%); */
        /* filter: grayscale(100%) brightness(30%) sepia(100%) hue-rotate(-50deg) saturate(400%); 
                opacity: .9;*/
        padding: 0.3vw;
      }

      .posters:hover {
        border: 0.3vw solid red;
        /* box-shadow: 0px 0px 12px 3px red;  */
        filter: none;
        opacity: 1;
      }

      .container {
        display: flex;
      }

      .column {
        padding-right: 1vw;
        padding-left: 1vw;
        width: 18vw;
        /* below: 7 days/page */
        /* width: 12vw; */
        height: 98vh;
        /* below: w ads on bottom */
        /* height: 83vh;  */
        overflow-y: auto;
        display: flex;
        flex-shrink: 0;
        flex-direction: column;
        /* border-right: .6vw dotted red;  */
        border-right: 0.1vw solid rgb(253, 0, 0);
      }

      .date,
      #menu,
      .more-info,
      .close,
      #about {
        /* background-color: rgb(248, 107, 107); */
        /* above is more pinkish */
        background-color: rgb(252, 83, 83);
        /* above is maybe right for non-bluelight-canceling? */
        color: rgb(71, 0, 0);
        box-shadow: 0px 3px 12px 3px rgb(120, 0, 0);
        z-index: 10;
      }

      .date {
        position: absolute;
        top: 45px;
        width: 18vw;
        text-align: center;
      }

      #menu {
        position: fixed;
        bottom: 0;
        padding: 15px;
        width: 210px;
        right: 0;
      }

      input[type="checkbox"] {
        accent-color: rgb(163, 1, 1);
        margin-right: 10px;
      }

      input[type="checkbox"]:checked {
        border: 2px solid darkred;
        margin-right: 10px;
      }

      #scrollRight {
        font-size: 9vh;
        z-index: 10;
        position: fixed;
        right: 1.5vw;
        top: 45vh;
      }

      #scrollRight:hover {
        color: red;
        text-shadow: -3px -3px 6px black;
      }

      a {
        color: black;
      }

      #ads {
        width: 100vw;
        height: 15vh;
        background-color: black;
        left: 0;
        bottom: 0;
        position: fixed;
        z-index: 100;
      }

      .more-info,
      #about {
        display: none;
        /* border: 3vw dotted rgb(142, 0, 0); */
        padding: 1vw;
        width: 50vw;
        position: fixed;
        left: 24vw;
        top: 12vh;
      }

      .title {
        text-decoration: underline;
      }

      .poster-inline {
        width: 30vw;
        float: left;
        margin-right: 1vw;
        box-shadow: 0px 3px 3px 3px rgb(202, 0, 0);
        /* margin-bottom: 1vw;  */
      }

      .close {
        /* color: rgb(193, 3, 3); 
                background-color: rgb(108, 0, 0);  */
        border-radius: 50%;
        position: absolute;
        top: 0vw;
        right: 0vw;
        /* top: -4.5vw;
                right: -3.3vw; */
        cursor: pointer;
        font-size: 1.5vw;
      }

      .close:hover {
        color: rgb(166, 1, 1);
      }

      #about-click {
        cursor: pointer;
      }
    </style>
  </head>
  <body>
    <!-- not working: -->
    <!-- <div id="scrollRight">→</div> -->

    <!-- <div id="ads">We love our sponsors! Check them out ↓ ↓ ↓ ↓</div> -->

    <div id="menu">
      Welcome to Red Calendar. <br /><br />

      <% tags.forEach((t)=>{ %>
        <% if(t.checked) { %>
          <input type="checkbox" checked id="<%=t.id%>" class="tag_checkboxes" name="categories" value="<%=t.tag_name%>" onchange="filterEventsByTag()">
        <% } else { %>
        <input type="checkbox"  id="<%=t.id%>" class="tag_checkboxes" name="categories" value="<%=t.tag_name%>" onchange="filterEventsByTag()">
        <% } %> 
        <label for="<%=t.id%>"><%=t.tag_name%></label><br /><br />
      <% }) %>

      <a href="/add">Add your public event (free).</a><br /><br />

      <span id="about-click" onclick="showElement('about')"><u>About.</u></span>
    </div>

    <div id="about">
      <u>About Red Calendar</u><br /><br />
      [Description... A pocketknife is a knife with one or more blades that fold
      into the handle. They are also known as jackknives, folding knives, EDC
      knife, or may be referred to as a penknife, though a penknife may also be
      a specific kind of pocketknife.[1][2] A typical blade length is 5 to 15
      centimetres (2 to 6 in).[3]Pocketknives are versatile tools, and may be
      used for anything from whittling and woodcarving, to butchering small
      game, gutting and filleting small fish, aiding in the preparation of
      tinder and kindling for fires, boring holes in soft material, to opening
      an envelope, cutting twine, slicing fruits and vegetables or as a means of
      self-defense.[4]Pocketknives may also be used in conjunction with other
      tools and equipment for woodcraft and bushcraft.[5]]
    </div>

    <div class="container">
      <% Object.entries(events).forEach(([day, event])=>{ %>
          <div class="column">
            <div id="<%= day.substring(5) %>" class="date"><%= day %> <%= event.start_date %></div>
            <% event.forEach((d)=>{ %> 
                    <img
                    class="posters"
                    src="<%=d.image_url%>"
                    onclick="toggleElement(this, '<%=d.id%>')"
                    />
                <% }) %> 
          </div>
      <% }) %> 
    
      <div class="more-info" id="event-details-container">

      </div>
    </div>
    <script>
      let prevClick
      async function toggleElement(e, id){
        
        const eventContainer = document.getElementById('event-details-container')

        if(eventContainer.style.display == "block" && prevClick == e){
          closeElement(id)
        } else{
          showElement(id)
        }
        prevClick = e
      }
      async function showElement(id) {
        const p = new URLSearchParams({event_id: id})
        const eventContainer = document.getElementById('event-details-container')
        // console.log(p)
        let eventId = id
        // ad blocker issue?
        // let fetchSingleEvent = await fetch('/event?' + p).then(response => response.text()).then(html => {
        //     eventContainer.innerHTML = html
        //     // console.log(html)
        //     eventContainer.style.display = "block"
        //   })
        let fetchSingleEvent = await fetch('/single-event?' + p).then(response => response.text())
        eventContainer.innerHTML = fetchSingleEvent

        const element = document.getElementById(eventId);
        if (!element) return; // Safety check
        // Show the selected element
        element.style.display = "block";
        eventContainer.style.display = "block"
        history.pushState(null, "", "?event=" + eventId);

      }

      function closeElement(id){
        // console.log('closed')
        let childElement = document.getElementById(id)
        let parentElement = document.getElementById('event-details-container')

        childElement.style.display = 'none'
        parentElement.style.display = 'none'

        parentElement.removeChild(parentElement.lastElementChild)

        history.pushState(null, "", "/");
    }

    // filters the page by the tags
    async function filterEventsByTag(){
      // pulls currently checked tags into array
      const checkedTags = Array.from(document.getElementsByClassName("tag_checkboxes")).filter(checkedTag => checkedTag.checked)

      // format spaces and / to comma separated url friendly string
      let filteredTagNames = checkedTags.map((c) => c.value.replace(/( \/ )/g, "-"))
      filteredTagNames = filteredTagNames.map(t => t.replace(/ /g, '_') )
      const formatFilteredTagIds = filteredTagNames.join(',')

      // make a request for filtering
      const filteredCalendar = await fetch('/filtered-weekly?filter='+formatFilteredTagIds, {
        method: "GET"
      }).then(response => response.text())
      
      // update html based on tags
      document.body.innerHTML = filteredCalendar
    }

      // Check URL on page load and show the correct element
      window.onload = function () {
        // check url 
        const params = new URLSearchParams(window.location.search);
        const visibleElement = params.get("event");

        if (visibleElement) {
          showElement(visibleElement);
        }

        // check date
        let date = new Date().getDate()
        // console.log(date)
      };
    </script>
  </body>
</html>
