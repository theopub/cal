<html>
  <head>
    <title>Red Calendar</title>
    <meta name="description" content="Red Calendar is an arts and action calendar that helps NYC gather without big tech middlemen.">

    <meta property="og:title" content="Red Calendar" />
    <meta property="og:description" content="Red Calendar is an arts and action calendar that helps NYC gather without big tech middlemen." />
    <meta property="og:image" content="https://cal.red/cal.png" />
    <meta property="og:url" content="https://cal.red" />
   
    
    <link rel="icon" type="image/png" href="/cal.png" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <style>
      body {
        font-family: Helvetica, sans-serif; 
        background-color: rgb(101, 0, 0);
        background: linear-gradient(345deg,rgba(99, 0, 0) 0%, rgb(180, 0, 0) 100%);
        font-size: 15px;
      }

              body.redbody {
                background: none; 
              }

              body.sepiabody {
                background: radial-gradient(circle,rgb(255, 248, 214) 0%, rgb(255, 222, 103) 39%, rgb(220, 255, 95) 100%);
                background-attachment: fixed;
              }

      .posters {
        position: relative;
        cursor: pointer;
        padding: 0.3vw;
        filter:  brightness(60%) sepia(100%) hue-rotate(-39deg) saturate(420%);  
        opacity: 0.6;
      }

      .posters:hover {
        border: 0.3vw solid red;
        filter: none;
        opacity: 1.0;
      }

              .posters.red {
                filter:  brightness(60%) sepia(100%) hue-rotate(-39deg) saturate(420%);  
                opacity: 0.6;
              }

              .posters.red:hover {
                border: 0.3vw solid red;
                filter: none;
                opacity: 1.0;
             
              }

              .posters.sepia {
                /* filter: sepia(100%) hue-rotate(6deg); */
                filter: sepia(100%) hue-rotate(30deg) saturate(90%);
                opacity: 1.0;
                box-shadow: 0px 0px 15px 0px rgb(120, 0, 0); 
              }
              .posters.sepia:hover {
                box-shadow: 0px 0px 600px 90px rgb(120, 0, 0); 
                filter: none; 
                z-index: 9; 
              }

      .container {
        display: flex;
      }

      .column {
        padding-right: 1vw;
        padding-left: 1vw;
        width: 18vw;
        padding-top: 6vh; 
        height: 93vh; 
        /* below: w ads on bottom */
        /* height: 83vh;  */
        overflow-y: auto;
        display: flex;
        flex-shrink: 0;
        flex-direction: column;
        /* border-right: .6vw dotted red;  */
        border-right: 0.1vw solid rgb(253, 0, 0);
      }
     
      .text-space, .close, .more-info {
        background-color: rgb(253, 85, 66);
        opacity: .99; 
        color: rgb(71, 0, 0);
        box-shadow: 0px 3px 12px 3px rgb(120, 0, 0);
        z-index: 10;
      }

                      .text-space.redtext, .close.redtext, .more-info.redtext {
                        background-color: rgb(253, 85, 66);
                        color: rgb(71, 0, 0);
                      }

                      .text-space.sepiatext, .close.sepiatext  {
                        background-color: rgb(246, 250, 185);
                        box-shadow: 0px 3px 21px 3px rgb(120, 0, 0);
                        color: rgb(71, 0, 0);
                      }

                      .more-info.sepiatext{
                        background-color: rgb(243, 248, 171);
                        box-shadow: 0px 30px 1500px 60px rgb(120, 0, 0); 
                      }

      .date, #menu {
        opacity: .9; 
      }

      
      .date, #menu, .close, #bw {
        user-select: none;
        -webkit-user-select: none; 
        -ms-user-select: none; 
      }

      .date {
        position: absolute;
        /* top: 45px; */
        top: 3vh; 
        width: 18vw;
        text-align: center;
      }

      #menu {
        position: fixed;
        bottom: 0;
        padding: 2vw;
        width: 210px;
        right: 0;
      }

      input[type="checkbox"] {
        accent-color: rgb(163, 1, 1);
        /* margin-right: 10px; */
      }

      input[type="checkbox"]:checked {
        border: 2px solid darkred;
        /* margin-right: 10px; */
      }

      #scrollRight {
        font-size: 9vh;
        z-index: 10;
        position: fixed;
        right: 1.5vw;
        top: 45vh;
      }

      #scrollRight:hover {
        color: red;
        text-shadow: -3px -3px 6px black;
      }

      a {
        color: rgb(71, 0, 0);
      }
/* 
      #ads {
        width: 100vw;
        height: 15vh;
        background-color: black;
        left: 0;
        bottom: 0;
        position: fixed;
        z-index: 100;
      } */

      .more-info,
      #about {
        display: none;
        padding: 1vw;
        width: 50vw;
        position: fixed;
        left: 24vw;
        top: 12vh;
        overflow-y: auto;
        max-height: 75vh;
        /* font-size: 18px;  */
     
      }

      .title {
        font-weight: bold; 
      }

      .poster-inline {
        width: 30vw;
        float: left;
        margin-right: 1vw;
        box-shadow: 0px 3px 3px 3px rgb(202, 0, 0);
  
      }

      .close {
        border-radius: 50%;
        position: fixed;
        left: 75.5vw;
        top: 10.5vh;
        text-align: center; 
        cursor: pointer;
        font-size: 24px; 
        z-index: 10000; 
      }

      .close:hover {
        color: rgb(166, 1, 1);
        box-shadow: 0px 3px 12px 3px rgb(166, 1, 1); 
      }

      #about-click {
        cursor: pointer;
      }

      .mobileonly {
        display:none;
      }

      .linebreaks {
        white-space: pre-wrap;
      }

      #categories {
        display: inline; 
      }

      #about-title {
        text-align: center; 
        width: 100%; 
      }

      .alive {
        /* color: red;  */
        /* text-shadow: 1px 1px 6px black;  */
        border-bottom: 9px dotted black;
        transition: border-bottom 1s;  
      }

      .alive:hover {
        border-bottom: 21px dashed black; 
      }

      #labor {
        margin-left: 9vw; 
        margin-right: 9vw; 
        text-align: justify; 

      }


      #light {
                position: fixed; 
                z-index: 1000;
                background-color: rgba(101, 0, 0, 0.6); 
                border-radius: 50%; 
                box-shadow: 1px 1px 30px rgb(255, 213, 86); 
                color: rgb(255, 213, 86); 
                padding: 1vh; 
                top: 1vw; 
                right: 1vw; 
                cursor: pointer; 
                white-space: pre; 
                font-size: 6px; 
                line-height: 4.5px; 
            }

            #light:hover {
                /* box-shadow: 1px 1px 60px rgb(255, 213, 86);  */
                /* background-color: rgba(255, 213, 86, 0.15);  */
                /* background-color: rgba(101, 0, 0, 0.3);  */
                box-shadow: 1px 1px 60px 30px rgb(255, 213, 86); 
           
                font-weight: bold; 
                text-shadow: 1px -1px 3px yellow; 
                /* border: .1px yellow solid;  */
                font-weight: 900;  
            }


      @media only screen and (max-width: 750px) {
                .more-info, #about {
                    left: 3vw; 
                    width: 92.3vw; 
                }

                body {
                    font-size: 12.9px; 
                }

                #content {
                    position: relative;
                    height: calc(100vh - 16px);
                    overflow-y: hidden;
                }

                .notmobile, #categories {
                    display: none; 
                }

                #menu {
                    width: 96vw; 
                    right: none; 
                    left: 0; 
                 
                }

                #mobileclickers {
                  text-align: center; 
                }

                .poster-inline {
                    width: 60vw; 
                }


                .column, .date {
                  width: 30vw;
                }

                .mobileonly {
                  display: inline; 
                }

                .close {
                  font-size: 30px; 
                  left: 96vw; 
                }

                .column {
                  height: calc(100vh - 6vh - 4vw - 32px);
                }

            }

    </style>
  </head>
  <body>
  <div id="content">




    <div id="light" onclick="toggleBW()">
  ..---..
 /         \
|           |
:          ;
 \  \~/  /
  `, Y ,'
   |_|_|
   |==|
   |==|
    \_/
    </div>

    <!-- <script>

        alert("The coolest sexiest thing to do in NYC right now is to VOTE for NYC mayor before June 24 and help save our city. Rank Zohran and Brad and maybe Adrienne. \n\nDON'T rank Cuomo anywhere on your ballot! \n\nAnd if you have time, help canvass for Zohran! https://www.zohranfornyc.com/volunteer/events.");
  
      </script>
       -->
<script>


    function toggleBW() {
      const background = document.body;
      const posters = document.querySelectorAll(".posters");
      const textSpace = document.querySelectorAll(".text-space, .close, .more-info");
    
      const isYellow = background.style.backgroundColor === "rgb(255, 246, 166)";
      background.style.backgroundColor = isYellow ? "rgb(101, 0, 0)" : "rgb(255, 246, 166)";
    
      posters.forEach(poster => {
        poster.classList.remove("red", "sepia");
        poster.classList.add(isYellow ? "red" : "sepia");
      });

      textSpace.forEach(text => {
        text.classList.remove("redtext", "sepiatext");
        text.classList.add(isYellow ? "redtext" : "sepiatext");
      });

      background.classList.remove("redbody", "sepiabody");
      background.classList.add(isYellow ? "redbody" : "sepiabody");

    }

  </script>



    <div id="menu" class="text-space">
      <span class="notmobile">Welcome to Red Calendar. <br /><br /></span>

      <span id="categories">
      <% tags.forEach((t)=>{ %>
        <% if(t.checked) { %>
          <input type="checkbox" checked id="tag-<%=t.id%>" class="tag_checkboxes" name="categories" value="<%=t.tag_name%>" onchange="filterEventsByTag()">
        <% } else { %>
        <input type="checkbox"  id="tag-<%=t.id%>" class="tag_checkboxes" name="categories" value="<%=t.tag_name%>" onchange="filterEventsByTag()">
        <% } %> 
                  <label for="tag-<%=t.id%>"><%=t.tag_name%></label>
        <br /> 
      <% }) %>     <br /> </span>




    <div id="mobileclickers">

      <span class="notmobile">
      <a href="/add">Add your event (free)</a>
      <br /><br /></span>


      <span id="about-click" onclick="toggleGuys('about')"><u>
        About / </u></span>

        <span class="alive"><a href="https://account.venmo.com/u/redcalendar">Donate!</a>
         </span>


      <span class="mobileonly">~~~
        <a href="/add">Add your event (free)</a>

      </span>

      <span class="mobileonly" onclick="toggleGuys('categories')">~~~ <u>Filter</u></span>
    </div>



    

    </div>

    <div id="about" class="text-space">
<!-- <b>CALL FOR EDITORS</b><br /><br />
      
      Red Calendar is looking to bulk up our Editor team! An Editor:
      <ol>
        <li>"Athletically" adds 10-15 events per week </li>
        <ul>
          <li>This is 90% of the job!</li>
          <li>Owns/monitors one or two categories</li>
        </ul>
        <li>Approves/denies events submitted by non-Editors</li>
        <li>Participates in very occasional meetings/group texts with the Editor team</li>
        <li>Is credited on our masthead (w bio and categories)</li>
        <li>Is stoked about Red Calendar, stoked to be its lifeblood</li>
        <li>Note: We have no money, so this is a labor of love</li>
      </ol>


      Red Calendar is an arts and action calendar that helps NYC gather without big tech middlemen. Link in bio (and on cal.red/add)!
 -->


      
      <div class="text-space close" onclick="this.parentElement.style.display='none'">X</div>
      <b><span id="about-title">About Red Calendar</span></b><br /><br />
      Red Calendar is an arts and action calendar that helps NYC gather without big tech middlemen. Managed by a team of editors, the Calendar also encourages cross-pollination among NYC's leftist/arts/culture communities. Anyone can add events for free, pending editor approval! <br /><br />

      Red Calendar is big-tech-free&mdash;no Meta, no AWS, no GCal. Each day's events reorder when you refresh and each event, when expanded, has its own sharable url. We are called Red Calendar because we wanted a color, and this was the shortest (and cheapest) url we could find that incorporated "calendar" and a color.
      <br /><br />
      <div id="labor">This is a <b>labor</b> of love. Countless hours have gone into building/maintaining the site&mdash;and none of us are rich kids or make much money. Could you <a class="alive" href="https://account.venmo.com/u/redcalendar"><b>please donate</b></a>?</div>
      
      <br />
<a href="https://www.auricpress.com/aristilde-kirby-daisy-catherine">Aristilde Kirby</a>: Editor  <br />

<a href="https://haiderriazkhan.com/">Haider</a>: Dev (backend), Co-Director<br />

JH (<a href="https://nyc-noise.com/">NYC Noise</a>/<a href="https://protest.one/calendar/">Protest One</a>): Editor <br />
<!-- 
Kira M: Outreach<br /> -->

<a href="https://www.instagram.com/rulerofzeeworld/">Kyla Gordon</a> (<a href="https://www.instagram.com/performanceart_nyc/?hl=en">performanceart_nyc</a>): Editor<br />


<a href="https://romkehoogwaerts.com/">Romke Hoogwaerts</a>: Media Editor <br />

<a href="https://samheckle.com/">Sam Heckle</a>: Dev (middleware)<br />

<a href="https://theo.land/">Theo Ellin Ballew</a>: Dev (frontend), Director<br />
<br />

<!-- &diams; &rarr; &diams; &rarr;	&diams;We want to add a couple Editors (ie., prolific event-adders) to our team!</b> Please <a href="https://form.jotform.com/251484280257055">fill out this form</a> if you're interested. &diams; &larr; &diams; &larr;	&diams; <br /><br /> -->

Contact theo@oral.pub with questions and <a href="https://form.jotform.com/251694674133159">share your email with us</a> for updates! 
    </div>

    <div class="container">
      <% Object.entries(events).forEach(([day, event])=>{ %>
          <div class="column">
            <div id="<%= day.substring(5) %>" class="date text-space"><%= day %> <%= event.start_date %></div>
            <%
            const shuffled = [...event].sort(() => 0.5 - Math.random());
            shuffled.forEach((d) => {
          %>
            <img
              class="posters"
              src="<%= d.image_url %>"
              srcset="<%= d.image_url.replace('.webp', '-mobile.webp') %> 600w, <%= d.image_url %> 1200w"
              sizes="(max-width: 768px) 600px, 1200px"
              data-clicked-date="<%= d.start_date %>"
              onclick="toggleElement(this, '<%= d.id %>', this.getAttribute('data-clicked-date'))"
            />
          <% }) %>

      
          </div>
      <% }) %> 
    
      <div class="more-info text-space" id="event-details-container">

      </div>
    </div>

    <script>
      function toggleGuys(id) {
              const element = document.getElementById(id);

              if (!element) return; // Safety check

              // If the clicked element is already visible, hide it
              if (element.style.display === "block") {
                  element.style.display = "none";
                  history.pushState(null, "", "?"); // Reset URL
              } else {
                  // Hide all other elements
                  document.querySelectorAll('.more-info').forEach(el => el.style.display = "none");

                  // Show the selected element
                  element.style.display = "block";
                  history.pushState(null, "", "?event=" + id);
              }
          }
  
      // Check URL on page load and show the correct element

  </script>

    <script>

      
      let prevClick
      async function toggleElement(e, id, clickedDate = null){
        
        const eventContainer = document.getElementById('event-details-container')

        if(eventContainer.style.display == "block" && prevClick == e){
          closeElement(id)
        } else{
          showElement(id, clickedDate)
        }
        prevClick = e
      }
      async function showElement(id, clickedDate = null) {
        const p = new URLSearchParams({event_id: id})
        if (clickedDate) {
          p.append('clicked_date', clickedDate)
        }
        const eventContainer = document.getElementById('event-details-container')
        let eventId = id
  
        let fetchSingleEvent = await fetch('/single-event?' + p).then(response => response.text())
        eventContainer.innerHTML = fetchSingleEvent


    
                  eventContainer.innerHTML = fetchSingleEvent;

                  const themeClass = document.body.classList.contains("sepiabody") ? "sepiatext" : "redtext";
                  eventContainer.querySelectorAll(".close, .more-info").forEach(el => {
                    el.classList.remove("redtext", "sepiatext");
                    el.classList.add(themeClass);
                  });

        const element = document.getElementById(eventId);
        if (!element) return; // Safety check
        // Show the selected element
        element.style.display = "block";
        eventContainer.style.display = "block"
        history.pushState(null, "", "?event=" + eventId);
      }

      function closeElement(id){
        // console.log('closed')
        let childElement = document.getElementById(id)
        let parentElement = document.getElementById('event-details-container')

        childElement.style.display = 'none'
        parentElement.style.display = 'none'

        parentElement.removeChild(parentElement.lastElementChild)

        history.pushState(null, "", "/");
    }

    // filters the page by the tags
    async function filterEventsByTag(){
      // pulls currently checked tags into array
      const checkedTags = Array.from(document.getElementsByClassName("tag_checkboxes")).filter(checkedTag => checkedTag.checked)

      // format spaces and / to comma separated url friendly string
      let filteredTagNames = checkedTags.map((c) => c.value.replace(/( \/ )/g, "-"))
      filteredTagNames = filteredTagNames.map(t => t.replace(/ /g, '_') )
      const formatFilteredTagIds = filteredTagNames.join(',')

      // make a request for filtering
      const filteredCalendar = await fetch('/filtered-weekly?filter='+formatFilteredTagIds, {
        method: "GET"
      }).then(response => response.text())
      
      // update html based on tags
      document.body.innerHTML = filteredCalendar
    }

      // Check URL on page load and show the correct element

      window.onload = function () {
        // check url 
        const params = new URLSearchParams(window.location.search);
        const visibleElement = params.get("event");

        if (visibleElement === "about") {
          document.getElementById("about").style.display = "block";
          return;
        }

        if (visibleElement) {
          showElement(visibleElement);
        }

        // check date
        let date = new Date().getDate()
        // console.log(date)
      };
    </script>

<script data-goatcounter="https://calred.goatcounter.com/count"
async src="//gc.zgo.at/count.js"></script>
  </div>
  </body>
</html>
